import sysfrom elf.components.headers.ElfHeader import ElfHeaderfrom elf.components.PhController import PhControllerfrom elf.components.ShController import ShControllerfrom elf.components.Section import Sectionfrom elf.components.Program import Programfrom elf.components.headers.Sh import Shfrom elf.components.headers.Ph import Phclass ReadElf:    def __init__(self, filename):        f = open(filename)        binList = map(lambda x: int(ord(x)), f.read())        self.eh = ElfHeader()        self.eh.retrieve(binList)        self.setShCtrl(binList)        self.setPhCtrl(binList, self.shCtrl)    def getResult(self):        return (self.eh, self.phCtrl, self.shCtrl)    def setShCtrl(self, binList):        shCtrl  = ShController()        shSize  = self.eh.get('sh_size')        shOff   = self.eh.get('sh_offset')        shNum   = self.eh.get('sh_num')        # get section headers        shList = []        for i in range(self.eh.get('sh_num')):            sh = Sh()            sh.retrieve(binList, (shOff + shSize * i))            #sh.echo()            shList.append(sh)                strSh = shList[self.eh.get('shstrndx')]        strShOff    = strSh.get('offset')        strShSize   = strSh.get('size')        snList = []        # get section names and set to snList        sectionStr = ''.join(map(chr, binList[strShOff:strShOff+strShSize]))        for (n, sh) in enumerate(shList):            index = sh.get('name_index')            s = sectionStr[index:]            name = s[:s.find("\0")]            snList.append(name)        # get section and append to shCtrl        for (sh, name) in zip(shList, snList):            start = sh.get('offset')            end = start + sh.get('size')            body = binList[start:end]            shCtrl.append(Section(body, name, sh))        self.shCtrl = shCtrl            def setPhCtrl(self, binList, shCtrl):        phCtrl = PhController()        phSize  = self.eh.get('ph_size')        phOff   = self.eh.get('ph_offset')        phNum   = self.eh.get('ph_num')        sList = shCtrl.getSectionList()        for i in range(phNum):            ph = Ph()            ph.retrieve(binList, (phOff + phSize * i))            #phCtrl.append(Program(ph, sList)             p = Program(ph)             p.echo()        self.phCtrl = phCtrl